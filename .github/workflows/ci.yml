name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  test:
    strategy:
      matrix:
        go-version: ["1.22", "1.23"]
        os: [ubuntu-22.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install libvips (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          # Install AVIF codec (libaom) for libheif
          sudo apt-get install -y libaom-dev libaom3
          # Install libheif and libvips
          sudo apt-get install -y libheif-dev libvips-dev libavif-dev libvips-tools
          # Verify HEIF/AVIF support
          # vips --vips-config | grep -i heif || echo "Warning: HEIF support not detected"
          vips --vips-config

      - name: Install libvips (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install vips

      - name: Setup MSYS2
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-libvips
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-pkg-config

      - name: Download dependencies (non-Windows)
        if: matrix.os != 'windows-latest'
        run: go mod download

      - name: Download dependencies (Windows)
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          export PATH="/mingw64/bin:$PATH"
          export PKG_CONFIG_PATH="/mingw64/lib/pkgconfig"
          go mod download

      - name: Run tests (non-Windows)
        if: matrix.os != 'windows-latest'
        run: go test -v ./...
        env:
          CGO_ENABLED: 1

      - name: Run tests (Windows)
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          export PATH="/mingw64/bin:$PATH"
          export PKG_CONFIG_PATH="/mingw64/lib/pkgconfig"
          go test -v ./...
        env:
          CGO_ENABLED: 1

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Install libvips
        run: |
          sudo apt-get update
          # Install AVIF codec (libaom) for libheif
          sudo apt-get install -y libaom-dev libaom3
          # Install libheif and libvips
          sudo apt-get install -y libheif-dev libvips-dev libavif-dev libvips-tools

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m
        continue-on-error: true

  coverage:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Install libvips
        run: |
          sudo apt-get update
          # Install AVIF codec (libaom) for libheif
          sudo apt-get install -y libaom-dev libaom3
          # Install libheif and libvips
          sudo apt-get install -y libheif-dev libvips-dev libavif-dev libvips-tools
          vips --vips-config

      - name: Download dependencies
        run: go mod download

      - name: Run coverage
        run: go test -race -coverprofile=coverage.out -covermode=atomic ./...
        env:
          CGO_ENABLED: 1

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
