name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  test:
    strategy:
      matrix:
        go-version: ["1.22", "1.23"]
        os: [ubuntu-22.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install libvips (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          # Install AVIF codec (libaom) for libheif
          sudo apt-get install -y libaom-dev libaom3
          # Install libheif and libvips
          sudo apt-get install -y libheif-dev libvips-dev libavif-dev libvips-tools
          # Verify HEIF/AVIF support
          # vips --vips-config | grep -i heif || echo "Warning: HEIF support not detected"
          vips --vips-config

      - name: Install libvips (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install vips

      - name: Install libvips (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          # Install pkg-config first
          choco install pkgconfiglite -y
          
          # Download pre-built vips binaries
          $vipsVersion = "8.15.1"
          $vipsUrl = "https://github.com/libvips/build-win64-mxe/releases/download/v${vipsVersion}/vips-dev-w64-web-${vipsVersion}.zip"
          
          Write-Host "Downloading vips from $vipsUrl"
          Invoke-WebRequest -Uri $vipsUrl -OutFile vips.zip
          
          Write-Host "Extracting vips..."
          Expand-Archive -Path vips.zip -DestinationPath C:\vips -Force
          
          Write-Host "Setting up environment variables..."
          $vipsPath = "C:\vips\vips-dev-8.15"
          
          # Set PATH and PKG_CONFIG_PATH
          echo "PATH=${vipsPath}\bin;C:\ProgramData\chocolatey\bin;$env:PATH" >> $env:GITHUB_ENV
          echo "PKG_CONFIG_PATH=${vipsPath}\lib\pkgconfig" >> $env:GITHUB_ENV
          
          # Let pkg-config handle the flags
          Write-Host "Testing pkg-config..."
          & "C:\ProgramData\chocolatey\bin\pkg-config.exe" --version
        shell: pwsh

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...
        env:
          CGO_ENABLED: 1

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Install libvips
        run: |
          sudo apt-get update
          # Install AVIF codec (libaom) for libheif
          sudo apt-get install -y libaom-dev libaom3
          # Install libheif and libvips
          sudo apt-get install -y libheif-dev libvips-dev libavif-dev libvips-tools

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m
        continue-on-error: true

  coverage:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Install libvips
        run: |
          sudo apt-get update
          # Install AVIF codec (libaom) for libheif
          sudo apt-get install -y libaom-dev libaom3
          # Install libheif and libvips
          sudo apt-get install -y libheif-dev libvips-dev libavif-dev libvips-tools
          vips --vips-config

      - name: Download dependencies
        run: go mod download

      - name: Run coverage
        run: go test -race -coverprofile=coverage.out -covermode=atomic ./...
        env:
          CGO_ENABLED: 1

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
